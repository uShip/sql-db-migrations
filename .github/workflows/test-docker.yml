name: Deploy to Database

on:
  push:
    branches:
      - main

env:
  commit: ${{ github.sha }}

jobs:
  deploy:
    runs-on: [self-hosted, uship-linux]
    # container:
    #     image: laudio/pyodbc:latest
    strategy:
      matrix:
        env: [prod]
    environment: ${{ matrix.env}}  # THIS WAS MISSING

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetches all history for all branches and tags
      - name: Set up Python 3.x and Docker
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
          architecture: x64
      - name: Pull Docker Image
        run: docker pull laudio/pyodbc:latest

      - name: Run Docker Container
        run: |
            docker run -d --name my-container laudio/pyodbc:latest

      - name: Run Python script
        run: docker exec my-container python deploy.py #python deploy.py
        env:
            DB_SERVER: ${{ secrets.DB_SERVER }}
            DB_NAME: ${{ secrets.DATABASE }}
            USERNAME: ${{ secrets.DB_USER }}
            PASSWORD: ${{ secrets.DB_PASS }}

      - name: Stop and Remove Docker Container
        run: docker stop my-container && docker rm my-container

    #   - name: Build Docker Image
    #     run: docker build -t my-docker-image .

    #   - name: Run Docker Container
    #     run: |
    #         docker run -d --name my-container my-docker-image
    #     env:
    #         MY_SECRET: ${{ secrets.MY_SECRET }}

    #   - name: Install pyodbc in Docker Container
    #     run: |
    #         docker exec my-container pip install pyodbc
    #     env:
    #         MY_SECRET: ${{ secrets.MY_SECRET }}

    #   - name: Execute deploy.py in Docker Container
    #     run: |
    #         docker exec my-container python deploy.py
    #     env:
    #         MY_SECRET: ${{ secrets.MY_SECRET }}

    #   - name: Stop and Remove Docker Container
    #     run: docker stop my-container && docker rm my-container
