name: ci-main

on:
  push:
    branches:
      - main

env:
  commit: ${{ github.sha }}

jobs:
  deploy:
    runs-on: [self-hosted, uship-linux]
    strategy:
      matrix:
        env: [prod]
    environment: ${{ matrix.env}}  # THIS WAS MISSING

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetches all history for all branches and tags
      - name: Set up Python 3.10.6
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install Requirements and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install pyodbc on the server
        run: |
          sudo dpkg --configure -a && true
          # Install wget if it's not available
          sudo apt-get update && sudo apt-get install -y wget
          # Run the OpenSSL installation script
          chmod +x ./install_openssl.sh
          ./install_openssl.sh
          python extract_pyodbc.py | bash
        env:
          DISTRO: "Ubuntu"
          REMOVE_EXITS: 'true'
          DOCS_URL: "https://raw.githubusercontent.com/MicrosoftDocs/sql-docs/live/docs/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server.md"
          ODBC_VERSION: 17
        shell: bash

      # - name: Fix SQL files
      #   run: |
      #     sqlfluff fix --dialect tsql . --exclude-rules RF04,LF05

      # - name: Check for changes
      #   id: git-check
      #   run: |
      #     git diff --exit-code || echo "::set-output name=changes::true"

      # - name: Commit and push if changes
      #   if: steps.git-check.outputs.changes == 'true'
      #   run: |
      #     git add -A
      #     git commit -m "Auto-fix SQL files" -a || echo "No changes to commit"
      #     git push

      - name: Run Python script
        run: python deploy.py
        env:
          DB_SERVER: ${{ secrets.DB_SERVER }}
          DB_NAME: ${{ secrets.DATABASE }}
          USERNAME: ${{ secrets.DB_USER }}
          PASSWORD: ${{ secrets.DB_PASS }}

    # OLD FLYWAY
    # steps:
    # - uses: actions/checkout@v3

    # - name: Set up Java
    #   uses: actions/setup-java@v2
    #   with:
    #     java-version: 11
    #     distribution: 'adopt'

    # - name: Set up Flyway
    #   run: |
    #     curl -o /tmp/flyway.tar.gz https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/9.22.3/flyway-commandline-9.22.3-linux-x64.tar.gz
    #     tar -xzf /tmp/flyway.tar.gz -C /tmp
    #     sudo mv /tmp/flyway-9.22.3 /opt/flyway
    #     sudo ln -s /opt/flyway/flyway /usr/local/bin/flyway

    # - name: Test Database Connection with Flyway Info
    #   env:
    #     FLYWAY_URL: ${{secrets.DB_HOSTNAME}}
    #     FLYWAY_USER: ${{secrets.DB_USER}}
    #     FLYWAY_PASSWORD: ${{secrets.DB_PASS}}
    #   run: |
    #     sudo -E flyway info

  # rollback:
  #   runs-on: [self-hosted, uship-linux]

  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Rollback changes
  #     run: |
  #       #
