name: Python Script Workflow

# on: [push]
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environment to deploy to (prod, dev, qa, sandbox)'
        options:
          - devPricing
          - dev
          - prod
          - qa
          - sandbox
        required: true
        default: 'devPricing'

# inputs:
#   ODBC_VERSION:
#     description: 'ODBC version to install (18 or 17 validated)'
#     default: "18"
#   DISTRO:
#     description: 'Distribution (from DOCS_URL)'
#     default: Ubuntu
#   DOCS_URL:
#     description: 'URL to the docs page to scrape instructions from'
#     default: "https://raw.githubusercontent.com/MicrosoftDocs/sql-docs/live/docs/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server.md"
#   REMOVE_EXITS:
#     default: 'true'
#     description: 'Remove exit statements from the script (they break the workflow)'


jobs:
  deploy:
    runs-on: [self-hosted, uship-linux]
    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetches all history for all branches and tags
    - name: Set up Python 3.10.6
      uses: actions/setup-python@v3
      with:
        python-version: 3.10.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    # - uses: Yarden-zamir/install-mssql-odbc@main
    #   with:
    #     ODBC_VERSION: 17
    #     DISTRO: Ubuntu
    #     DOCS_URL: https://yarden-zamir.com/alternate-docs-path.md
    #     REMOVE_EXITS: true
    - run: |
        sudo dpkg --configure -a && true
        python extract_instruction.py | bash
      env:
        DISTRO: "Ubuntu"
        REMOVE_EXITS: 'true'
        DOCS_URL: "https://raw.githubusercontent.com/MicrosoftDocs/sql-docs/live/docs/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server.md"
        ODBC_VERSION: 17
      shell: bash
    - run: pip install -r requirements.txt

    - name: Find Modified SQL Files
      id: modified_sql
      run: |
        echo "MODIFIED_SQL=$(git diff --name-only --diff-filter=AM HEAD~ HEAD | grep '.sql$' | xargs)" >> $GITHUB_ENV

    - name: Run Python script
      run: python deploy.py ${{ env.MODIFIED_SQL }}
      env:
        DB_SERVER: ${{ secrets.DB_SERVER }}
        DB_NAME: ${{ secrets.DATABASE }}
        USERNAME: ${{ secrets.DB_USER }}
        PASSWORD: ${{ secrets.DB_PASS }}
